{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","Mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","aria-current","to","role","placeholder","onClick","ToggleMode","htmlFor","TextForm","countwords","text","trim","split","filter","word","length","settext","useState","Fragment","heading","value","rows","onChange","event","console","log","target","handleUpClick","UpText","toUpperCase","style","backgroundColor","color","borderColor","handleLowClick","toLowerCase","handleClearClick","handleCapitalisedClick","capitalisedTextArr","map","element","slice","join","Alert","capitalize","lower","charAt","alert","class","msg","data-bs-dismiss","About","myStyle","setMyStyle","btntext","setBtnText","data-bs-parent","togglestyle","App","setMode","setAlert","showAlert","message","setTimeout","Router","document","body","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f168c3a5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) { \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"About/\">About</Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n          <div className={`form-check form-switch mx-3 text-${props.Mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.ToggleMode}/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes= {title: PropTypes.string, abouttext: PropTypes.string}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"uppercase\" + text);\r\n    let UpText = text.toUpperCase();\r\n    settext(UpText);\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let UpText = text.toLowerCase();\r\n    settext(UpText);\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let UpText = \"\";\r\n    settext(UpText);\r\n  };\r\n\r\n  const countwords= (text)=>{\r\n    return text.trim().split(/.\\s+/).filter(word=> word.length>0).length;\r\n  }\r\n\r\n  const handleCapitalisedClick = () => {\r\n    let textarr = text.split(\" \");\r\n    let capitalisedTextArr = textarr.map((element) => {\r\n      if (element.length > 0) {\r\n        return element[0].toUpperCase() + element.slice(1);\r\n      } else {\r\n        return element;\r\n      }\r\n    });\r\n    settext(capitalisedTextArr.join(\" \"));\r\n  };\r\n\r\n  const handleonchange = (event) => {\r\n    console.log(\"done\");\r\n    settext(event.target.value);\r\n  };\r\n\r\n  const [text, settext] = useState(\"ENTER THE TEXT HERE: \");\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mybox\"\r\n            value={text}\r\n            rows=\"8\"\r\n            onChange={handleonchange}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleUpClick}\r\n          style={{\r\n            backgroundColor: \"#4a6fa5\",\r\n            color: \"white\",\r\n            borderColor: \"#3b5988\",\r\n          }}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleLowClick}\r\n          style={{\r\n            backgroundColor: \"#4a6fa5\",\r\n            color: \"white\",\r\n            borderColor: \"#3b5988\",\r\n          }}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleClearClick}\r\n          style={{\r\n            backgroundColor: \"#4a6fa5\",\r\n            color: \"white\",\r\n            borderColor: \"#3b5988\",\r\n          }}\r\n        >\r\n          Clear\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleCapitalisedClick}\r\n          style={{\r\n            backgroundColor: \"#4a6fa5\",\r\n            color: \"white\",\r\n            borderColor: \"#3b5988\",\r\n          }}\r\n        >\r\n          Capitalise Case\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {countwords(text)} words and {text.length} characters\r\n        </p>\r\n        <p>{0.5 * countwords(text)} seconds read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n      };\r\n      \r\n  return (\r\n    props.alert &&\r\n    <div>\r\n      <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>: {capitalize(props.alert.msg)}\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About(props) {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n\r\n  const [btntext, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n  const togglestyle = () => {\r\n    if (myStyle.color === \"black\") {\r\n      setMyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n      });\r\n      setBtnText(\"Enable Light Mode\");\r\n    } else {\r\n      setMyStyle({\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n      });\r\n      setBtnText(\"Enable Dark Mode\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container my-4\" style={props.Mode}>\r\n      <h1>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              data-bs-toggle=\"collapse\"\r\n              style={myStyle}\r\n            >\r\n              Creator\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={props.Mode}>\r\n              Saad Khan is an aspiring developer embarking on his journey in the\r\n              world of React development.\r\n              <br />\r\n              With a passion for coding and a dedication to continuous learning,\r\n              Saad is committed to honing his skills and mastering the\r\n              intricacies of modern web development.\r\n              <br />\r\n              <br />\r\n              This project marks Saad's first venture into React, showcasing his\r\n              ability to integrate new technologies and frameworks into his\r\n              skillset.\r\n              <br />\r\n              Although this project may be a small step, it represents a\r\n              significant milestone in Saad's path toward becoming a proficient\r\n              React developer.\r\n              <br />\r\n              <br />\r\n              Saad understands that every great developer starts with the\r\n              basics, and he is eager to build upon this foundation.\r\n              <br />\r\n              With each project, he aims to challenge himself, explore\r\n              innovative solutions, and contribute to the ever-evolving tech\r\n              community.\r\n              <br />\r\n              <br />\r\n              Follow Saad's journey as he navigates the exciting landscape of\r\n              web development, continually striving for excellence and making\r\n              strides towards his goal of becoming a top-notch React developer.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={props.Mode}>\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={props.Mode}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={props.Mode}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        onClick={togglestyle}\r\n        className=\"btn btn-dark my-3\"\r\n        style={props.Mode}\r\n      >\r\n        {btntext}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';  // Ensure Alert component is imported\nimport About from './components/About';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes\n} from \"react-router-dom\";\n\nfunction App() {\n  const [Mode, setMode] = useState('light'); // DARK MODE\n  const [alert, setAlert] = useState(null); // ALERTS\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3500);\n  };\n\n  const ToggleMode = () => {\n    if (Mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#1e3d59';\n      document.body.style.color = '#dcdcdc'; // Warmer off-white\n      showAlert('Dark mode has been set', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'grey';\n      showAlert('Light mode has been set', 'success');\n    }\n  };\n\n  return (\n    <Router>\n      <Navbar title=\"TextUtils\" Mode={Mode} ToggleMode={ToggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Routes>\n          <Route path=\"/\" element={<TextForm heading=\"Enter the text to analyze\" />} />\n          <Route path=\"/about\" element={<About />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}